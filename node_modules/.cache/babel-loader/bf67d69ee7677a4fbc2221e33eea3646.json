{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrov/WebstormProjects/instagram/src/ImageUpload.jsx\";\nimport React, { useState } from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport { db, storage } from \"./firebase\";\nexport const ImageUploader = () => {\n  const [caption, setCaption] = useState('');\n  const [image, setImage] = useState('');\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = event => {\n    if (event.target.files[0]) {\n      setImage(event.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on('state_changed', snapshot => {\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => console.log(error), () => {\n      storage.ref('images').child(image.name).getDownloadURL().then(url => {\n        db.collection();\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Enter a caption...\",\n    onChange: event => setCaption(event.target.value),\n    value: caption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Upload\"));\n};","map":{"version":3,"sources":["/Users/aleksandrov/WebstormProjects/instagram/src/ImageUpload.jsx"],"names":["React","useState","Input","Button","db","storage","ImageUploader","caption","setCaption","image","setImage","progress","setProgress","handleChange","event","target","files","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","url","collection","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,EAAR,EAAYC,OAAZ,QAA0B,YAA1B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,CAAD,CAAxC;;AAEA,QAAMY,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAJ,EAA2B;AACvBN,MAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAR;AACH;AACJ,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACvB,UAAMC,UAAU,GAAGb,OAAO,CAACc,GAAR,CAAa,UAASV,KAAK,CAACW,IAAK,EAAjC,EAAoCC,GAApC,CAAwCZ,KAAxC,CAAnB;AACAS,IAAAA,UAAU,CAACI,EAAX,CACI,eADJ,EAEIC,QAAQ,IAAI;AACR,YAAMZ,QAAQ,GAAGa,IAAI,CAACC,KAAL,CACZF,QAAQ,CAACG,gBAAT,GAA4BH,QAAQ,CAACI,UAAtC,GAAoD,GADvC,CAAjB;AAGAf,MAAAA,WAAW,CAACD,QAAD,CAAX;AACH,KAPL,EAQIiB,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARb,EASI,MAAM;AACFvB,MAAAA,OAAO,CACFc,GADL,CACS,QADT,EAEKY,KAFL,CAEWtB,KAAK,CAACW,IAFjB,EAGKY,cAHL,GAIKC,IAJL,CAIUC,GAAG,IAAI;AACT9B,QAAAA,EAAE,CAAC+B,UAAH;AACH,OANL;AAOH,KAjBL;AAmBH,GArBD;;AAuBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,oBAFhB;AAGI,IAAA,QAAQ,EAAErB,KAAK,IAAIN,UAAU,CAACM,KAAK,CAACC,MAAN,CAAaqB,KAAd,CAHjC;AAII,IAAA,KAAK,EAAE7B,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEM,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAQI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,CADJ;AAYH,CA9CM","sourcesContent":["import React, {useState} from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport {db, storage} from \"./firebase\";\n\nexport const ImageUploader = () => {\n    const [caption, setCaption] = useState('')\n    const [image, setImage] = useState('')\n    const [progress, setProgress] = useState(0)\n\n    const handleChange = (event) => {\n        if (event.target.files[0]) {\n            setImage(event.target.files[0])\n        }\n    }\n\n    const handleUpload = () => {\n        const uploadTask = storage.ref(`images/${image.name}`).put(image)\n        uploadTask.on(\n            'state_changed',\n            snapshot => {\n                const progress = Math.round(\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                )\n                setProgress(progress)\n            },\n            error => console.log(error),\n            () => {\n                storage\n                    .ref('images')\n                    .child(image.name)\n                    .getDownloadURL()\n                    .then(url => {\n                        db.collection()\n                    })\n            }\n        )\n    }\n\n    return (\n        <div>\n            <Input\n                type=\"text\"\n                placeholder=\"Enter a caption...\"\n                onChange={event => setCaption(event.target.value)}\n                value={caption}\n            />\n            <Input type=\"file\" onChange={handleChange}/>\n            <Button onClick={handleUpload}>Upload</Button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}