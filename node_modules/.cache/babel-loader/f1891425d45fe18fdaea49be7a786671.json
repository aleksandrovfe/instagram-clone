{"ast":null,"code":"import _slicedToArray from\"/Users/aleksandrov/WebstormProjects/instagram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{db}from\"../../firebase\";import firebase from\"firebase\";import{Comment}from\"./Comment\";import{AddComment}from\"./AddComment\";export var CommentContainer=function CommentContainer(_ref){var user=_ref.user,postId=_ref.postId;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),comments=_useState2[0],setComments=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),comment=_useState4[0],setComment=_useState4[1];var postComment=function postComment(event){event.preventDefault();db.collection('posts').doc(postId).collection('comments').add({text:comment,userName:user.displayName,timestamp:firebase.firestore.FieldValue.serverTimestamp()});setComment('');};useEffect(function(){var unsubscribe;if(postId){unsubscribe=db.collection('posts').doc(postId).collection('comments').orderBy('timestamp','desc').onSnapshot(function(snapshot){setComments(snapshot.docs.map(function(doc){return{comment:doc.data(),id:doc.id};}));});}return function(){unsubscribe();};},[postId]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Comment,{comments:comments}),/*#__PURE__*/React.createElement(AddComment,{postComment:postComment,user:user,setComment:setComment,comment:comment}));};","map":{"version":3,"sources":["/Users/aleksandrov/WebstormProjects/instagram/src/components/Comment/CommentContainer.jsx"],"names":["React","useEffect","useState","db","firebase","Comment","AddComment","CommentContainer","user","postId","comments","setComments","comment","setComment","postComment","event","preventDefault","collection","doc","add","text","userName","displayName","timestamp","firestore","FieldValue","serverTimestamp","unsubscribe","orderBy","onSnapshot","snapshot","docs","map","data","id"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,OAAQC,EAAR,KAAiB,gBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,OAAQC,OAAR,KAAsB,WAAtB,CACA,OAAQC,UAAR,KAAyB,cAAzB,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAoB,IAAlBC,CAAAA,IAAkB,MAAlBA,IAAkB,CAAZC,MAAY,MAAZA,MAAY,eAEhBP,QAAQ,CAAC,EAAD,CAFQ,wCAEzCQ,QAFyC,eAE/BC,WAF+B,8BAGlBT,QAAQ,CAAC,EAAD,CAHU,yCAGzCU,OAHyC,eAGhCC,UAHgC,eAKhD,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC3BA,KAAK,CAACC,cAAN,GAEAb,EAAE,CAACc,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BT,MAA3B,EAAmCQ,UAAnC,CAA8C,UAA9C,EAA0DE,GAA1D,CAA8D,CAC1DC,IAAI,CAAER,OADoD,CAE1DS,QAAQ,CAAEb,IAAI,CAACc,WAF2C,CAG1DC,SAAS,CAAEnB,QAAQ,CAACoB,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EAH+C,CAA9D,EAMAb,UAAU,CAAC,EAAD,CAAV,CACH,CAVD,CAYAZ,SAAS,CAAC,UAAM,CACZ,GAAI0B,CAAAA,WAAJ,CACA,GAAIlB,MAAJ,CAAY,CACRkB,WAAW,CAAGxB,EAAE,CACXc,UADS,CACE,OADF,EAETC,GAFS,CAELT,MAFK,EAGTQ,UAHS,CAGE,UAHF,EAITW,OAJS,CAID,WAJC,CAIY,MAJZ,EAKTC,UALS,CAKE,SAAAC,QAAQ,CAAI,CACpBnB,WAAW,CAACmB,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,SAAAd,GAAG,QAAK,CAClCN,OAAO,CAAEM,GAAG,CAACe,IAAJ,EADyB,CAElCC,EAAE,CAAEhB,GAAG,CAACgB,EAF0B,CAAL,EAArB,CAAD,CAAX,CAIH,CAVS,CAAd,CAWH,CAED,MAAO,WAAM,CACTP,WAAW,GACd,CAFD,CAGH,CAnBQ,CAmBN,CAAClB,MAAD,CAnBM,CAAT,CAsBA,mBACI,4CACI,oBAAC,OAAD,EAAS,QAAQ,CAAEC,QAAnB,EADJ,cAEI,oBAAC,UAAD,EAAY,WAAW,CAAEI,WAAzB,CAAsC,IAAI,CAAEN,IAA5C,CAAkD,UAAU,CAAEK,UAA9D,CAA0E,OAAO,CAAED,OAAnF,EAFJ,CADJ,CAMH,CA7CM","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {db} from \"../../firebase\";\nimport firebase from \"firebase\";\nimport {Comment} from \"./Comment\";\nimport {AddComment} from \"./AddComment\";\n\nexport const CommentContainer = ({user, postId}) => {\n\n    const [comments, setComments] = useState([])\n    const [comment, setComment] = useState('')\n\n    const postComment = (event) => {\n        event.preventDefault()\n\n        db.collection('posts').doc(postId).collection('comments').add({\n            text: comment,\n            userName: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        setComment('')\n    }\n\n    useEffect(() => {\n        let unsubscribe\n        if (postId) {\n            unsubscribe = db\n                .collection('posts')\n                .doc(postId)\n                .collection('comments')\n                .orderBy('timestamp', 'desc')\n                .onSnapshot(snapshot => {\n                    setComments(snapshot.docs.map(doc => ({\n                        comment: doc.data(),\n                        id: doc.id,\n                    })))\n                })\n        }\n\n        return () => {\n            unsubscribe()\n        }\n    }, [postId])\n\n\n    return (\n        <div>\n            <Comment comments={comments}/>\n            <AddComment postComment={postComment} user={user} setComment={setComment} comment={comment}/>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}