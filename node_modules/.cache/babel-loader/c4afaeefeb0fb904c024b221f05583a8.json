{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrov/WebstormProjects/instagram/src/Post.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from \"./firebase\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport firebase from \"firebase\";\nexport const Post = ({\n  user,\n  postId,\n  userName,\n  imageUrl,\n  caption\n}) => {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n\n  const postComment = event => {\n    event.preventDefault();\n    db.collection('posts').doc(postId).collection('comments').add({\n      text: comment,\n      userName: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setComment('');\n  };\n\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) {\n      unsubscribe = db.collection('posts').doc(postId).collection('comments').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => ({\n          comment: doc.data(),\n          id: doc.id\n        })));\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"post__avatar\",\n    alt: \"username\",\n    src: \"/assets/5.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"post__user-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, userName)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"post__image\",\n    src: imageUrl,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"post__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 40\n    }\n  }, userName, \": \"), caption), comments.map(({\n    id,\n    el\n  }) => /*#__PURE__*/React.createElement(\"p\", {\n    className: \"comments__text\",\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, el.comment.userName), \" \", el.comment.text)), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"post__form-add-comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"post__input-comment\",\n    type: \"text\",\n    placeholder: \"Add a comment...\",\n    value: comment,\n    onChange: event => setComment(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"post__btn-add-comment\",\n    disabled: !comment,\n    type: \"submit\",\n    onClick: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"post\")));\n};","map":{"version":3,"sources":["/Users/aleksandrov/WebstormProjects/instagram/src/Post.jsx"],"names":["React","useEffect","useState","Avatar","db","Input","Button","firebase","Post","user","postId","userName","imageUrl","caption","comments","setComments","comment","setComment","postComment","event","preventDefault","collection","doc","add","text","displayName","timestamp","firestore","FieldValue","serverTimestamp","unsubscribe","orderBy","onSnapshot","snapshot","docs","map","data","id","el","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {db} from \"./firebase\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport firebase from \"firebase\";\n\nexport const Post = ({ user, postId, userName, imageUrl, caption }) => {\n    const [comments, setComments] = useState([])\n    const [comment, setComment] = useState('')\n\n    const postComment = (event) => {\n        event.preventDefault()\n\n        db.collection('posts').doc(postId).collection('comments').add({\n            text: comment,\n            userName: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        setComment('')\n    }\n\n    useEffect(() => {\n        let unsubscribe\n        if (postId) {\n            unsubscribe = db\n                .collection('posts')\n                .doc(postId)\n                .collection('comments')\n                .orderBy('timestamp', 'desc')\n                .onSnapshot(snapshot => {\n                    setComments(snapshot.docs.map(doc => ({\n                        comment: doc.data(),\n                        id: doc.id,\n                    })))\n                })\n        }\n\n        return () => {\n            unsubscribe()\n        }\n    }, [postId])\n\n    return (\n        <div className=\"post\">\n            <div className=\"post__header\">\n                <Avatar\n                    className=\"post__avatar\"\n                    alt='username'\n                    src=\"/assets/5.jpg\"\n                />\n                <h3 className=\"post__user-name\">{userName}</h3>\n            </div>\n            <img\n                className=\"post__image\"\n                src={imageUrl}\n                alt=\"\"\n            />\n            <h4 className=\"post__text\"><strong>{userName}: </strong>{caption}</h4>\n\n            {\n                comments.map(({id, el}) => (\n                    <p className=\"comments__text\" key={id}>\n                        <strong>{el.comment.userName}</strong> {el.comment.text}\n                    </p>\n                ))\n            }\n\n            <form className=\"post__form-add-comment\">\n                <Input\n                    className=\"post__input-comment\"\n                    type=\"text\"\n                    placeholder=\"Add a comment...\"\n                    value={comment}\n                    onChange={event => setComment(event.target.value)}\n                />\n                <Button\n                    className=\"post__btn-add-comment\"\n                    disabled={!comment}\n                    type=\"submit\"\n                    onClick={postComment}\n                >\n                    post\n                </Button>\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}