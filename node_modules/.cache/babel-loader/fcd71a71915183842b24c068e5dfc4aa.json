{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrov/WebstormProjects/instagram/src/components/Comment/CommentContainer.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { firebase, db } from \"../../firebase\";\nimport { Comment } from \"./Comment\";\nimport { AddComment } from \"./AddComment\";\nexport const CommentContainer = ({\n  user,\n  postId\n}) => {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n\n  const postComment = event => {\n    event.preventDefault();\n    db.collection('posts').doc(postId).collection('comments').add({\n      text: comment,\n      userName: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setComment('');\n  };\n\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) {\n      unsubscribe = db.collection('posts').doc(postId).collection('comments').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => ({\n          comment: doc.data(),\n          id: doc.id\n        })));\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Comment, {\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AddComment, {\n    postComment: postComment,\n    user: user,\n    setComment: setComment,\n    comment: comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/aleksandrov/WebstormProjects/instagram/src/components/Comment/CommentContainer.jsx"],"names":["React","useEffect","useState","firebase","db","Comment","AddComment","CommentContainer","user","postId","comments","setComments","comment","setComment","postComment","event","preventDefault","collection","doc","add","text","userName","displayName","timestamp","firestore","FieldValue","serverTimestamp","unsubscribe","orderBy","onSnapshot","snapshot","docs","map","data","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,QAAR,EAAkBC,EAAlB,QAA2B,gBAA3B;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAoB;AAEhD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMY,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AAEAZ,IAAAA,EAAE,CAACa,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BT,MAA3B,EAAmCQ,UAAnC,CAA8C,UAA9C,EAA0DE,GAA1D,CAA8D;AAC1DC,MAAAA,IAAI,EAAER,OADoD;AAE1DS,MAAAA,QAAQ,EAAEb,IAAI,CAACc,WAF2C;AAG1DC,MAAAA,SAAS,EAAEpB,QAAQ,CAACqB,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B;AAH+C,KAA9D;AAMAb,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAVD;;AAYAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI0B,WAAJ;;AACA,QAAIlB,MAAJ,EAAY;AACRkB,MAAAA,WAAW,GAAGvB,EAAE,CACXa,UADS,CACE,OADF,EAETC,GAFS,CAELT,MAFK,EAGTQ,UAHS,CAGE,UAHF,EAITW,OAJS,CAID,WAJC,EAIY,MAJZ,EAKTC,UALS,CAKEC,QAAQ,IAAI;AACpBnB,QAAAA,WAAW,CAACmB,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBd,GAAG,KAAK;AAClCN,UAAAA,OAAO,EAAEM,GAAG,CAACe,IAAJ,EADyB;AAElCC,UAAAA,EAAE,EAAEhB,GAAG,CAACgB;AAF0B,SAAL,CAArB,CAAD,CAAX;AAIH,OAVS,CAAd;AAWH;;AAED,WAAO,MAAM;AACTP,MAAAA,WAAW;AACd,KAFD;AAGH,GAnBQ,EAmBN,CAAClB,MAAD,CAnBM,CAAT;AAsBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAEI,WAAzB;AAAsC,IAAA,IAAI,EAAEN,IAA5C;AAAkD,IAAA,UAAU,EAAEK,UAA9D;AAA0E,IAAA,OAAO,EAAED,OAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CA7CM","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {firebase, db} from \"../../firebase\";\nimport {Comment} from \"./Comment\";\nimport {AddComment} from \"./AddComment\";\n\nexport const CommentContainer = ({user, postId}) => {\n\n    const [comments, setComments] = useState([])\n    const [comment, setComment] = useState('')\n\n    const postComment = (event) => {\n        event.preventDefault()\n\n        db.collection('posts').doc(postId).collection('comments').add({\n            text: comment,\n            userName: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        setComment('')\n    }\n\n    useEffect(() => {\n        let unsubscribe\n        if (postId) {\n            unsubscribe = db\n                .collection('posts')\n                .doc(postId)\n                .collection('comments')\n                .orderBy('timestamp', 'desc')\n                .onSnapshot(snapshot => {\n                    setComments(snapshot.docs.map(doc => ({\n                        comment: doc.data(),\n                        id: doc.id,\n                    })))\n                })\n        }\n\n        return () => {\n            unsubscribe()\n        }\n    }, [postId])\n\n\n    return (\n        <div>\n            <Comment comments={comments}/>\n            <AddComment postComment={postComment} user={user} setComment={setComment} comment={comment}/>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}