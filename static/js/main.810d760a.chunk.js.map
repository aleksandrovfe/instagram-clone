{"version":3,"sources":["firebase.js","ImageUpload.jsx","components/Comment/Comment.jsx","components/Comment/AddComment.jsx","components/Comment/CommentContainer.jsx","components/Post/Post.jsx","components/Post/PostContainer.jsx","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","ImageUploader","setOpenNewpost","userName","useState","caption","setCaption","image","setImage","progress","setProgress","className","Input","type","placeholder","onChange","event","target","value","files","Button","onClick","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","url","collection","add","timestamp","FieldValue","serverTimestamp","ImageUrl","max","Comment","comments","map","id","comment","key","text","AddComment","user","setComment","postComment","disabled","CommentContainer","postId","setComments","useEffect","unsubscribe","doc","orderBy","onSnapshot","docs","data","preventDefault","displayName","Post","imageUrl","Avatar","alt","src","PostContainer","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","App","classes","modalStyle","posts","setPosts","open","setOpen","openSignIn","setOpenSignIn","openNewPost","setUserName","email","setEmail","password","setPassword","setUser","onAuthStateChanged","authUser","post","Modal","onClose","style","TextField","e","createUserWithEmailAndPassword","updateProfile","catch","alert","message","signInWithEmailAndPassword","signOut","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAaaA,EAXcC,IAASC,cAAc,CAC9CC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAGWC,YACjBC,EAAOX,IAASW,OAChBC,EAAUZ,IAASY,U,oCCTnBC,EAAgB,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,SAAc,EAC3BC,mBAAS,IADkB,mBAClDC,EADkD,KACzCC,EADyC,OAE/BF,mBAAS,IAFsB,mBAElDG,EAFkD,KAE3CC,EAF2C,OAGzBJ,mBAAS,GAHgB,mBAGlDK,EAHkD,KAGxCC,EAHwC,KA2CzD,OACI,yBAAKC,UAAU,YACX,yBAAKA,UAAU,qBACX,kBAACC,EAAA,EAAD,CACIC,KAAK,OACLC,YAAY,qBACZC,SAAU,SAAAC,GAAK,OAAIV,EAAWU,EAAMC,OAAOC,QAC3CA,MAAOb,EACPM,UAAU,qCAEd,kBAACC,EAAA,EAAD,CAAOD,UAAU,iBAAiBE,KAAK,OAAOE,SAhDrC,SAACC,GACdA,EAAMC,OAAOE,MAAM,IACnBX,EAASQ,EAAMC,OAAOE,MAAM,OA+CxB,kBAACC,EAAA,EAAD,CAAQT,UAAU,iBAAiBU,QA3C1B,WACErB,EAAQsB,IAAR,iBAAsBf,EAAMgB,OAAQC,IAAIjB,GAChDkB,GACP,iBACA,SAAAC,GACI,IAAMjB,EAAWkB,KAAKC,MACjBF,EAASG,iBAAmBH,EAASI,WAAc,KAExDpB,EAAYD,MAEhB,SAAAsB,GAAK,OAAIC,QAAQC,IAAIF,MACrB,WACI/B,EACKsB,IAAI,UACJY,MAAM3B,EAAMgB,MACZY,iBACAC,MAAK,SAAAC,GACFlD,EAAGmD,WAAW,SAASC,IAAI,CACvBC,UAAWpD,IAASU,UAAU2C,WAAWC,kBACzCrC,QAASA,EACTsC,SAAUN,EACVlC,SAAUA,IAEdO,EAAY,GACZJ,EAAW,IACXE,EAAS,YAIzBN,GAAe,KAcP,WAEJ,8BAAUS,UAAU,qBAAqBO,MAAOT,EAAUmC,IAAI,U,SC5D7DC,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OACI,6BAEQA,EAASC,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,QAAN,OACT,uBAAGtC,UAAU,iBAAiBuC,IAAKF,GAC/B,gCAASC,EAAQ9C,UADrB,IACyC8C,EAAQE,WCJxDC,EAAa,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,KAAMJ,EAAuC,EAAvCA,QAASK,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YACpD,OACI,6BACKF,EAEO,0BAAM1C,UAAU,0BACZ,kBAACC,EAAA,EAAD,CACID,UAAU,sBACVE,KAAK,OACLC,YAAY,mBACZI,MAAO+B,EACPlC,SAAU,SAAAC,GAAK,OAAIsC,EAAWtC,EAAMC,OAAOC,UAE/C,kBAACE,EAAA,EAAD,CACIT,UAAU,wBACV6C,UAAWP,EACXpC,KAAK,SACLQ,QAASkC,GAJb,SAUN,OCrBLE,EAAmB,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,KAAMK,EAAY,EAAZA,OAAY,EAEhBtD,mBAAS,IAFO,mBAEzC0C,EAFyC,KAE/Ba,EAF+B,OAGlBvD,mBAAS,IAHS,mBAGzC6C,EAHyC,KAGhCK,EAHgC,KAuChD,OAtBAM,qBAAU,WACN,IAAIC,EAeJ,OAdIH,IACAG,EAAc1E,EACTmD,WAAW,SACXwB,IAAIJ,GACJpB,WAAW,YACXyB,QAAQ,YAAa,QACrBC,YAAW,SAAAtC,GACRiC,EAAYjC,EAASuC,KAAKlB,KAAI,SAAAe,GAAG,MAAK,CAClCb,QAASa,EAAII,OACblB,GAAIc,EAAId,YAKjB,WACHa,OAEL,CAACH,IAIA,6BACI,kBAAC,EAAD,CAASZ,SAAUA,IACnB,kBAAC,EAAD,CAAYS,YArCA,SAACvC,GACjBA,EAAMmD,iBAENhF,EAAGmD,WAAW,SAASwB,IAAIJ,GAAQpB,WAAW,YAAYC,IAAI,CAC1DY,KAAMF,EACN9C,SAAUkD,EAAKe,YACf5B,UAAWpD,IAASU,UAAU2C,WAAWC,oBAG7CY,EAAW,KA4B+BD,KAAMA,EAAMC,WAAYA,EAAYL,QAASA,MC5ClFoB,EAAO,SAAC,GAAmD,IAAjDhB,EAAgD,EAAhDA,KAAMK,EAA0C,EAA1CA,OAAQvD,EAAkC,EAAlCA,SAAUmE,EAAwB,EAAxBA,SAAUjE,EAAc,EAAdA,QACrD,OACI,yBAAKM,UAAU,QACX,yBAAKA,UAAU,gBACX,kBAAC4D,EAAA,EAAD,CACI5D,UAAU,eACV6D,IAAI,WACJC,IAAI,kBAER,wBAAI9D,UAAU,mBAAmBR,IAErC,yBACIQ,UAAU,cACV8D,IAAKH,EACLE,IAAI,KAER,wBAAI7D,UAAU,cAAa,gCAASR,EAAT,MAA8BE,GAEzD,kBAAC,EAAD,CAAkBgD,KAAMA,EAAMK,OAAQA,MCnBrCgB,EAAgB,SAAC,GAAmD,IAAjDrB,EAAgD,EAAhDA,KAAMK,EAA0C,EAA1CA,OAAQvD,EAAkC,EAAlCA,SAAUmE,EAAwB,EAAxBA,SAAUjE,EAAc,EAAdA,QAC9D,OACI,kBAAC,EAAD,CAAMqD,OAAQA,EAAQL,KAAMA,EAAMlD,SAAUA,EAAUmE,SAAUA,EAAUjE,QAASA,K,SCM3F,SAASsE,IAIL,MAAO,CACHC,IAAI,GAAD,OAJK,GAIL,KACHC,KAAK,GAAD,OAJK,GAIL,KACJC,UAAU,cAAD,OAND,GAMC,eALA,GAKA,OAIjB,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,SAAU,WACVC,MAAO,IACPC,gBAAiBJ,EAAMK,QAAQC,WAAWL,MAC1CM,UAAWP,EAAMQ,QAAQ,GACzBC,QAAST,EAAMU,QAAQ,EAAG,EAAG,QAyLtBC,MArLf,WACI,IAAMC,EAAUd,IADL,EAEU3E,mBAASuE,GAAvBmB,EAFI,sBAIe1F,mBAAS,IAJxB,mBAIJ2F,EAJI,KAIGC,EAJH,OAKa5F,oBAAS,GALtB,mBAKJ6F,EALI,KAKEC,EALF,OAMyB9F,oBAAS,GANlC,mBAMJ+F,EANI,KAMQC,EANR,OAO2BhG,oBAAS,GAPpC,mBAOJiG,EAPI,KAOSnG,EAPT,OAQqBE,mBAAS,IAR9B,mBAQJD,EARI,KAQMmG,EARN,OASelG,mBAAS,IATxB,mBASJmG,EATI,KASGC,EATH,OAUqBpG,mBAAS,IAV9B,mBAUJqG,EAVI,KAUMC,EAVN,OAWatG,mBAAS,MAXtB,mBAWJiD,EAXI,KAWEsD,EAXF,KA6DX,OAzBA/C,qBAAU,WACN,IAAMC,EAAc9D,EAAK6G,oBAAmB,SAACC,GAErCF,EADAE,GAGQ,SAIhB,OAAO,WACHhD,OAEL,CAACR,EAAMlD,IAEVyD,qBAAU,WACNzE,EAAGmD,WAAW,SAASyB,QAAQ,YAAa,QAAQC,YAAW,SAAAtC,GAC3DsE,EAAStE,EAASuC,KAAKlB,KAAI,SAAAe,GAAG,MAAK,CAC/Bd,GAAIc,EAAId,GACR8D,KAAMhD,EAAII,eAIlBhE,GAAe,KAChB,IAGC,yBAAKS,UAAU,OACX,kBAACoG,EAAA,EAAD,CACId,KAAMA,EACNe,QAAS,kBAAMd,GAAQ,KAEvB,yBAAKe,MAAOnB,EAAYnF,UAAWkF,EAAQX,OACvC,0BAAMvE,UAAU,cACZ,yBACIA,UAAU,mBACV8D,IAAI,wEACJD,IAAI,SAER,kBAAC0C,EAAA,EAAD,CACIpG,YAAY,YACZD,KAAK,OACLK,MAAOf,EACPY,SAAU,SAACoG,GAAD,OAAOb,EAAYa,EAAElG,OAAOC,UAE1C,kBAACgG,EAAA,EAAD,CACIpG,YAAY,QACZD,KAAK,OACLK,MAAOqF,EACPxF,SAAU,SAACoG,GAAD,OAAOX,EAASW,EAAElG,OAAOC,UAEvC,kBAACgG,EAAA,EAAD,CACIpG,YAAY,WACZD,KAAK,WACLK,MAAOuF,EACP1F,SAAU,SAACoG,GAAD,OAAOT,EAAYS,EAAElG,OAAOC,UAE1C,kBAACE,EAAA,EAAD,CAAQoC,UAAWrD,EAAUkB,QA/ElC,SAACL,GACZA,EAAMmD,iBAENpE,EAAKqH,+BAA+Bb,EAAOE,GACtCrE,MAAK,SAAAyE,GACF,OAAOA,EAASxD,KAAKgE,cAAc,CAC/BjD,YAAajE,OAGpBmH,OAAM,SAACvF,GAAD,OAAWwF,MAAMxF,EAAMyF,YAElCtB,GAAQ,KAoEQ,cAMZ,kBAACa,EAAA,EAAD,CACId,KAAME,EACNa,QAAS,kBAAMZ,GAAc,KAE7B,yBAAKa,MAAOnB,EAAYnF,UAAWkF,EAAQX,OACvC,0BAAMvE,UAAU,cACZ,yBACIA,UAAU,mBACV8D,IAAI,wEACJD,IAAI,SAER,kBAAC0C,EAAA,EAAD,CACIpG,YAAY,QACZD,KAAK,OACLK,MAAOqF,EACPxF,SAAU,SAACoG,GAAD,OAAOX,EAASW,EAAElG,OAAOC,UAEvC,kBAACgG,EAAA,EAAD,CACIpG,YAAY,WACZD,KAAK,WACLK,MAAOuF,EACP1F,SAAU,SAACoG,GAAD,OAAOT,EAAYS,EAAElG,OAAOC,UAE1C,kBAACE,EAAA,EAAD,CAAQC,QA9Fb,SAACL,GACZA,EAAMmD,iBAENpE,EAAK0H,2BAA2BlB,EAAOE,GAClCa,OAAM,SAACvF,GAAD,OAAWwF,MAAMxF,EAAMyF,YAElCpB,GAAc,KAwFE,cAKZ,4BAAQzF,UAAU,eACd,yBAAKA,UAAU,qBACX,yBACIA,UAAU,oBACV8D,IAAI,wEACJD,IAAI,SAEPnB,EACQ,yBAAK1C,UAAU,6BACZ,kBAAC4D,EAAA,EAAD,CAAQ5D,UAAU,eAAgB6D,IAAI,WAAWC,IAAI,kBACrD,uBAAG9D,UAAU,kBAAkB0C,EAAKe,aACpC,kBAAChD,EAAA,EAAD,CAAQC,QAAS,kBAAMnB,GAAe,KAAtC,aAEJ,MAGXmD,EACQ,kBAACjC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAK2H,YAA5B,UAED,6BACI,kBAACtG,EAAA,EAAD,CAAQC,QAAS,kBAAM+E,GAAc,KAArC,WACA,kBAAChF,EAAA,EAAD,CAAQC,QAAS,kBAAM6E,GAAQ,KAA/B,aAMhB,6BAASvF,UAAU,aACf,kBAACoG,EAAA,EAAD,CACId,KAAMI,EACNW,QAAS,kBAAM9G,GAAe,KAE9B,yBAAK+G,MAAOnB,EAAYnF,UAAWkF,EAAQX,QAClC,OAAJ7B,QAAI,IAAJA,OAAA,EAAAA,EAAMe,aAAe,kBAAC,EAAD,CAAelE,eAAgBA,EAAgBC,SAAUkD,EAAKe,cAAkB,wBAAIzD,UAAU,2BAAd,sBAK1GoF,EAAMhD,KAAI,gBAAEC,EAAF,EAAEA,GAAI8D,EAAN,EAAMA,KAAN,OACN,kBAAC,IAAMa,SAAP,CAAgBzE,IAAKF,GACjB,kBAAC,EAAD,CACIK,KAAMA,EACNK,OAAQV,EACR7C,SAAU2G,EAAK3G,SACfE,QAASyG,EAAKzG,QACdiE,SAAUwC,EAAKnE,kBCvM/CiF,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.810d760a.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nexport const firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyCVZDGLd9jl_I6aNkyH2S6rOSeol1iVung\",\n    authDomain: \"insta-gram-56ef1.firebaseapp.com\",\n    databaseURL: \"https://insta-gram-56ef1.firebaseio.com\",\n    projectId: \"insta-gram-56ef1\",\n    storageBucket: \"insta-gram-56ef1.appspot.com\",\n    messagingSenderId: \"1099332335404\",\n    appId: \"1:1099332335404:web:400bfab31dfd4a83e6de89\",\n    measurementId: \"G-JW3VKTMFWZ\"\n});\n\nexport const db = firebaseApp.firestore()\nexport const auth = firebase.auth()\nexport const storage = firebase.storage()\n\n","import React, {useState} from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport {db, storage} from \"./firebase\";\nimport firebase from \"firebase\";\n\nexport const ImageUploader = ({setOpenNewpost, userName}) => {\n    const [caption, setCaption] = useState('')\n    const [image, setImage] = useState('')\n    const [progress, setProgress] = useState(0)\n\n    const handleChange = (event) => {\n        if (event.target.files[0]) {\n            setImage(event.target.files[0])\n        }\n    }\n\n    const handleUpload = () => {\n        const uploadTask = storage.ref(`images/${image.name}`).put(image)\n        uploadTask.on(\n            'state_changed',\n            snapshot => {\n                const progress = Math.round(\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                )\n                setProgress(progress)\n            },\n            error => console.log(error),\n            () => {\n                storage\n                    .ref('images')\n                    .child(image.name)\n                    .getDownloadURL()\n                    .then(url => {\n                        db.collection('posts').add({\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                            caption: caption,\n                            ImageUrl: url,\n                            userName: userName,\n                        })\n                        setProgress(0)\n                        setCaption('')\n                        setImage(null)\n                    })\n            }\n        )\n        setOpenNewpost(false)\n    }\n\n    return (\n        <div className=\"uploader\">\n            <div className='uploader__wrapper'>\n                <Input\n                    type=\"text\"\n                    placeholder=\"Enter a caption...\"\n                    onChange={event => setCaption(event.target.value)}\n                    value={caption}\n                    className=\"uploader__item uploader__caption\"\n                />\n                <Input className=\"uploader__item\" type=\"file\" onChange={handleChange}/>\n                <Button className=\"uploader__item\" onClick={handleUpload}>Upload</Button>\n            </div>\n            <progress className=\"uploader__progress\" value={progress} max='100'></progress>\n        </div>\n    )\n}","import React from \"react\";\n\nexport const Comment = ({ comments }) => {\n    return (\n        <div>\n            {\n                comments.map(({id, comment}) => (\n                    <p className=\"comments__text\" key={id}>\n                        <strong>{comment.userName}</strong> {comment.text}\n                    </p>\n                ))\n            }\n        </div>\n    )\n}","import React from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\n\nexport const AddComment = ({ user, comment, setComment, postComment }) => {\n    return (\n        <div>\n            {user\n                ?  (\n                    <form className=\"post__form-add-comment\">\n                        <Input\n                            className=\"post__input-comment\"\n                            type=\"text\"\n                            placeholder=\"Add a comment...\"\n                            value={comment}\n                            onChange={event => setComment(event.target.value)}\n                        />\n                        <Button\n                            className=\"post__btn-add-comment\"\n                            disabled={!comment}\n                            type=\"submit\"\n                            onClick={postComment}\n                        >\n                            post\n                        </Button>\n                    </form>\n                )\n                : null\n            }\n        </div>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {db} from \"../../firebase\";\nimport firebase from \"firebase\";\nimport {Comment} from \"./Comment\";\nimport {AddComment} from \"./AddComment\";\n\nexport const CommentContainer = ({user, postId}) => {\n\n    const [comments, setComments] = useState([])\n    const [comment, setComment] = useState('')\n\n    const postComment = (event) => {\n        event.preventDefault()\n\n        db.collection('posts').doc(postId).collection('comments').add({\n            text: comment,\n            userName: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        setComment('')\n    }\n\n    useEffect(() => {\n        let unsubscribe\n        if (postId) {\n            unsubscribe = db\n                .collection('posts')\n                .doc(postId)\n                .collection('comments')\n                .orderBy('timestamp', 'desc')\n                .onSnapshot(snapshot => {\n                    setComments(snapshot.docs.map(doc => ({\n                        comment: doc.data(),\n                        id: doc.id,\n                    })))\n                })\n        }\n\n        return () => {\n            unsubscribe()\n        }\n    }, [postId])\n\n\n    return (\n        <div>\n            <Comment comments={comments}/>\n            <AddComment postComment={postComment} user={user} setComment={setComment} comment={comment}/>\n        </div>\n    )\n}","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {CommentContainer} from \"../Comment/CommentContainer\";\n\nexport const Post = ({ user, postId, userName, imageUrl, caption }) => {\n    return (\n        <div className=\"post\">\n            <div className=\"post__header\">\n                <Avatar\n                    className=\"post__avatar\"\n                    alt='username'\n                    src=\"/assets/5.jpg\"\n                />\n                <h3 className=\"post__user-name\">{userName}</h3>\n            </div>\n            <img\n                className=\"post__image\"\n                src={imageUrl}\n                alt=\"\"\n            />\n            <h4 className=\"post__text\"><strong>{userName}: </strong>{caption}</h4>\n\n            <CommentContainer user={user} postId={postId}/>\n        </div>\n    )\n}","import React from \"react\";\nimport {Post} from \"./Post\";\n\nexport const PostContainer = ({ user, postId, userName, imageUrl, caption }) => {\n    return (\n        <Post postId={postId} user={user} userName={userName} imageUrl={imageUrl} caption={caption}/>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport './App.scss';\nimport {db, auth} from './firebase'\nimport Modal from \"@material-ui/core/Modal\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport {ImageUploader} from \"./ImageUpload\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {PostContainer} from \"./components/Post/PostContainer\";\nimport TextField from \"@material-ui/core/TextField\";\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nfunction App() {\n    const classes = useStyles()\n    const [modalStyle] = useState(getModalStyle)\n\n    const [posts, setPosts] = useState([])\n    const [open, setOpen] = useState(false)\n    const [openSignIn, setOpenSignIn] = useState(false)\n    const [openNewPost, setOpenNewpost] = useState(false)\n    const [userName, setUserName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [user, setUser] = useState(null)\n\n    const signUp = (event) => {\n        event.preventDefault()\n\n        auth.createUserWithEmailAndPassword(email, password)\n            .then(authUser => {\n                return authUser.user.updateProfile({\n                    displayName: userName\n                })\n            })\n            .catch((error) => alert(error.message))\n\n        setOpen(false)\n    }\n\n    const signIn = (event) => {\n        event.preventDefault()\n\n        auth.signInWithEmailAndPassword(email, password)\n            .catch((error) => alert(error.message))\n\n        setOpenSignIn(false)\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged((authUser) => {\n            if (authUser) {\n                setUser(authUser)\n            } else {\n                setUser(null)\n            }\n        })\n\n        return () => {\n            unsubscribe()\n        }\n    }, [user, userName])\n\n    useEffect(() => {\n        db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n            setPosts(snapshot.docs.map(doc => ({\n                id: doc.id,\n                post: doc.data(),\n            })))\n        })\n\n        setOpenNewpost(false)\n    }, [])\n\n    return (\n        <div className=\"app\">\n            <Modal\n                open={open}\n                onClose={() => setOpen(false)}\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <form className=\"app__modal\" >\n                        <img\n                            className='app__modal-image'\n                            src=\"https://logos-world.net/wp-content/uploads/2020/04/Instagram-Logo.png\"\n                            alt=\"logo\"\n                        />\n                        <TextField\n                            placeholder=\"User name\"\n                            type=\"text\"\n                            value={userName}\n                            onChange={(e) => setUserName(e.target.value)}\n                        />\n                        <TextField\n                            placeholder=\"Email\"\n                            type=\"text\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                        <TextField\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                        <Button disabled={!userName} onClick={signUp}>Sign up</Button>\n                    </form>\n                </div>\n            </Modal>\n\n\n            <Modal\n                open={openSignIn}\n                onClose={() => setOpenSignIn(false)}\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <form className=\"app__modal\">\n                        <img\n                            className='app__modal-image'\n                            src=\"https://logos-world.net/wp-content/uploads/2020/04/Instagram-Logo.png\"\n                            alt=\"logo\"\n                        />\n                        <TextField\n                            placeholder=\"Email\"\n                            type=\"text\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                        <TextField\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                        <Button onClick={signIn}>Sign In</Button>\n                    </form>\n                </div>\n            </Modal>\n\n            <header className='app__header'>\n                <div className=\"app__header-login\">\n                    <img\n                        className='app__header-image'\n                        src=\"https://logos-world.net/wp-content/uploads/2020/04/Instagram-Logo.png\"\n                        alt=\"logo\"\n                    />\n                    {user\n                        ?   (<div className=\"app__header-login-wrapper\">\n                                <Avatar className=\"post__avatar\"  alt='username' src=\"/assets/5.jpg\" />\n                                <p className=\"app__user-name\">{user.displayName}</p>\n                                <Button onClick={() => setOpenNewpost(true)}>New post</Button>\n                            </div>\n                        ) : null\n                    }\n                </div>\n                {user\n                    ?   (<Button onClick={() => auth.signOut()}>Logout</Button>)\n                    :   (\n                        <div>\n                            <Button onClick={() => setOpenSignIn(true)}>Sign in</Button>\n                            <Button onClick={() => setOpen(true)}>Sign up</Button>\n                        </div>\n                        )\n                }\n            </header>\n\n            <section className=\"app__body\">\n                <Modal\n                    open={openNewPost}\n                    onClose={() => setOpenNewpost(false)}\n                >\n                    <div style={modalStyle} className={classes.paper}>\n                        {user?.displayName ? (<ImageUploader setOpenNewpost={setOpenNewpost} userName={user.displayName}/>) : <h3 className='app__body-upload-unauth'>Log in to upload</h3>}\n                    </div>\n                </Modal>\n\n                {\n                    posts.map(({id, post}) => (\n                        <React.Fragment key={id}>\n                            <PostContainer\n                                user={user}\n                                postId={id}\n                                userName={post.userName}\n                                caption={post.caption}\n                                imageUrl={post.ImageUrl}\n                            />\n                        </React.Fragment>\n                    ))\n                }\n            </section>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}